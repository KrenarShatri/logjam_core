#!/usr/bin/env ruby

require File.expand_path('../../../../../config/boot.rb', __FILE__)
require 'amqp'
require 'json'
require 'active_support'

app = ARGV[0] || "app"
env = ARGV[1] || "production"
keys = (ARGV[2] || "all_pages,jobs,xws").split(/,/)

FIELDS = %w(gc_time other_time memcache_time gearman_time search_time api_time db_time view_time total_time)

EM.run do
  connection = AMQP::connect(:host => "127.0.0.1")
  channel = MQ.new(connection)
  exchange = channel.topic("logjam-performance-data-#{app}-#{env}")

  trap("INT"){ EM.next_tick { connection.close { EM.stop_event_loop} } }

  EM.add_periodic_timer(1) do
    keys.each do |key|
      count = 50+450*rand()
      data = FIELDS.inject({"count" => count}){|h,k| h[k] = 100*rand*count; h}
      encoded_data = data.to_json
      # publish performance data
      exchange.publish(encoded_data, :key => key)
    end
  end
  error_count = 0
  EM.add_periodic_timer(3) do
    keys.each do |key|
      errors =
        [
         {
           "severity" => 3,
           "time" => Time.now.utc,
           "action" => "ApplicationController#index",
           "description" => "Something broke #{error_count+=1}"
         }
        ]
      encoded_errors = errors.to_json
      # publish error data
      exchange.publish(encoded_errors, :key => key)
    end
  end
end

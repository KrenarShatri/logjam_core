<div id='resource-plot'>
  <script type="text/javascript" src="/javascripts/protovis-r3.2.js"></script>
  <script type="text/javascript+protovis">

var data = <%= @protovis_data.to_json %>;
var interval = <%= params[:interval].to_i %>;
var colors = <%= (@resources.reverse.map{|r| Logjam::Resource.color(r,0.8)}+["rgba(128,128,128,0.2)"]).to_json %>;
var legend = <%= (@resources.reverse+%w(requests/second)).to_json.gsub(/_/,' ') %>;
var request_counts = <%= @request_counts.to_json %>;

/* Sizing and scales. */
var w = <%= width %>,
    h = <%= height %>,
    x = pv.Scale.linear(0, 1440/interval-1).range(0, w),
    y = pv.Scale.linear(0, <%= @protovis_max %>).range(0, h).nice(),
    y2 = pv.Scale.linear(0, pv.max(request_counts)).range(0, 50).nice(),
    color_map = pv.colors(colors),
    c = color_map.range();

/* The root panel. */
var vis = new pv.Panel()
    .strokeStyle("#999")
    .width(w)
    .height(h)
    .bottom(65)
    .left(40)
    .right(40)
    .top(7);

/* X-label. */
vis.add(pv.Label)
    .left(w/2)
    .bottom(-20)
    .font("12px sans-serif")
    .textStyle("#999")
    .textAlign("center")
    .textBaseline("middle")
    .text("Time of day");

/* X-axis and ticks. */
vis.add(pv.Rule)
    .data(pv.range(24).map(function(h) h/interval*60))
    .left(x)
    .bottom(0)
    .visible(function(d) d)
    .strokeStyle(function(d) d ? "rgba(128,128,128,.2)" : "#999")
  .anchor("bottom").add(pv.Label)
    .text(function(t) t*interval/60);

/* Y-label */
vis.add(pv.Label)
    .left(-30)
    .bottom(h/2)
    .font("12px sans-serif")
    .textStyle("#999")
    .textAlign("center")
    .textBaseline("middle")
    .textAngle(-Math.PI / 2)
    .text("<%= h @dataset.ylabel %>");

/* Y-axis and ticks. */
vis.add(pv.Rule)
    .data(y.ticks(10))
    .bottom(y)
    .strokeStyle(function(d) d ? "rgba(128,128,128,.2)" : "#999")
  .anchor("left").add(pv.Label)
    .text(y.tickFormat);

/* Legend. */
vis.add(pv.Dot)
    .data(legend)
    .left(function() 10+(150*(Math.floor(this.index/2))))
    .bottom(function() -40-14*(this.index%2))
    .lineWidth(1)
    .size(16)
    .strokeStyle(color_map)
    .fillStyle(color_map)
    .add(pv.Label)
       .textBaseline("middle")
       .textMargin(7)
       .text(function() legend[this.index]);

/* Request counts. */
vis.add(pv.Area)
    .data(request_counts)
    .left(function() x(this.index))
    .bottom(h-50)
    .height(function(d) y2(d))
    .interpolate("cardinal")
    .fillStyle("rgba(128,128,128,0.2)")
    .strokeStyle("rgba(128,128,128,0.2)");

vis.add(pv.Label)
    .data([0,25,50])
    .bottom(function() h-50+this.index*25)
    .right(0)
    .text(function(d) y2.invert(d))
    .textAlign("left")
    .textBaseline("middle")
;


/* The stack layout. */
vis.add(pv.Layout.Stack)
    .layers(data)
    .x(function(d) x(d[0]))
    .y(function(d) y(d[1]))
  .layer.add(pv.Area)
    .interpolate("step-after")
    .fillStyle(function(d) c[this.parent.index]);

vis.render();
</script>
  </div>

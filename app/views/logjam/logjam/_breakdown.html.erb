<% time_resources = Logjam::Resource.time_resources
   call_resources = Logjam::Resource.call_resources
   memory_resources = Logjam::Resource.memory_resources
   heap_resources = Logjam::Resource.heap_resources
   colors = Logjam::Resource.colors
   pie_colors = Logjam::Resource.colors_with_transparency(0.7)
   s = @dataset.summary
   chart_size = 80
-%>

<fieldset class="resource-fields">
  <legend>Time</legend>
  <table id="request-details-time" class="breakdown-table">
    <% time_resources.each do |name| -%>
      <% next if (value = s.avg(name)).zero?  -%>
      <tr>
        <td class="resource_name"><%= hrn name %></td>
        <td class="number" style="color:<%= raw(colors[name] || '#000') %>;">
          <%= number_with_precision(value, :precision => 2) %> ms
        </td>
      </tr>
    <% end -%>
  </table>
  <div id="time-resources" class="breakdown-chart">
    <% resources = time_resources-["total_time", "gc_time"] -%>
    <%= render :partial => "simple_pie", :locals => {
          :data => resources.map{|r| s.avg(r)},
          :legend => resources,
          :container => "time-resources",
          :colors => pie_colors.values_at(*resources), :size => chart_size } %>
  </div>
</fieldset>

<% unless s.zero_resources?(call_resources) %>
<fieldset class="resource-fields">
  <legend>Calls</legend>
  <table id="request-details-calls" class="breakdown-table">
    <% call_resources.each do |name| -%>
      <% next if (value = s.avg(name)).zero?  -%>
      <tr>
        <td class="resource_name">
          <%= hrn name %>
        </td>
        <td class="number" style="color:<%= raw(colors[name] || '#000') %>;">
          <%= number_with_precision(value, :precision => 2) %>
        </td>
      </tr>
    <% end -%>
  </table>
  <div id="call-resources" class="breakdown-chart">
  <% resources = *call_resources.select{|r| r =~ /_calls$/}-["gc_calls"] -%>
    <%= render :partial => "simple_pie", :locals => {
          :data =>  resources.map{|r| s.avg(r)},
          :legend => resources,
          :container => "call-resources",
          :colors => pie_colors.values_at(*resources), :size => chart_size
        } %>
  </div>
</fieldset>
<% end %>

<p class="clear-left"></p>

<% unless s.zero_resources?(memory_resources) %>
<fieldset class="resource-fields">
  <legend>Allocations</legend>
  <table id="request-details-allocations" class="breakdown-table">
    <% memory_resources.each do |name| -%>
      <% next if (value = s.avg(name)).zero?  -%>
      <tr>
        <td class="resource_name">
          <%= hrn name %>
        </td>
        <td class="number" style="color:<%= raw(colors[name] || '#000') %>;">
          <%= memory_number(value) %>
        </td>
      </tr>
    <% end -%>
  </table>
  <div id="allocation-resources" class="breakdown-chart">
  <% resources = *memory_resources-["allocated_memory"]
     h = resources.inject({}){|h,r| h[r] = s.avg(r); h }
     h["allocated_objects"] *= 40 if h.include?("allocated_objects")
  -%>
    <%= render :partial => "simple_pie", :locals => {
          :data => h.values_at(*resources),
          :legend => resources,
          :container => "allocation-resources",
          :colors => pie_colors.values_at(*resources), :size => chart_size } %>
  </div>
</fieldset>
<% end %>

<% unless s.zero_resources?(heap_resources) %>
<fieldset class="resource-fields">
  <legend>Heap</legend>
  <table id="request-details-memory" class="breakdown-table">
    <% heap_resources.each do |name| -%>
      <% next if (value = s.avg(name)).zero?  -%>
      <tr>
        <td class="resource_name">
          <%= hrn name %>
        </td>
        <td class="number" style="color:<%= raw(colors[name] || '#000') %>;">
          <%= memory_number(value) %>
        </td>
      </tr>
    <% end -%>
    <tr>
      <% name = "free_slots" %>
      <td class="resource_name">
        <%= hrn name %>
      </td>
      <td class="number" style="color:<%= raw(colors[name] || '#000') %>;">
        <%= memory_number(s.avg('heap_size') - s.avg('live_data_set_size')) %>
      </td>
    </tr>
  </table>
  <div id="heap-resources" class="breakdown-chart">
    <% resources = *heap_resources + ["free_slots"] - ["heap_size"]
       h = resources.inject({}){|h,r| h[r] = s.avg(r); h }
       h["free_slots"] = s.avg('heap_size') - s.avg('live_data_set_size')
    -%>
    <%= render :partial => "simple_pie", :locals => {
          :data => h.values_at(*resources),
          :legend => resources,
          :container => "heap-resources",
          :colors => pie_colors.values_at(*resources), :size => chart_size } %>
  </div>
</fieldset>
<% end %>

<p class="clear-left"></p>
